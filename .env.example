# DataPrism Environment Variables
# Copy this file to .env and fill in your actual values
# NEVER commit .env to git - only commit .env.example

# =============================================================================
# OpenAI API
# =============================================================================
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# Pinecone Vector Database
# =============================================================================
# Get from: https://app.pinecone.io
PINECONE_API_KEY=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
PINECONE_ENVIRONMENT=aped-4627-b74a
PINECONE_INDEX_NAME=dataprism-sematic
PINECONE_HOST=https://dataprism-sematic-01blwrk.svc.aped-4627-b74a.pinecone.io

# =============================================================================
# Supabase PostgreSQL Database
# =============================================================================
# Get from: https://supabase.com/dashboard/project/[project-id]/settings/api
# Project: https://invnoyuelwobmstjhidr.supabase.co
SUPABASE_URL=https://invnoyuelwobmstjhidr.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxxxxxxx
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxxxxxxx

# Database connection string for SQLAlchemy
# IMPORTANT: Use Transaction Pooler (IPv4 compatible) instead of Direct Connection
# Get from: Supabase > Settings > Database > Connection pooling > Transaction mode
# Direct Connection (db.xxx.supabase.co:5432) is IPv6-only and won't work on most platforms
# Transaction Pooler (pooler.supabase.com:6543) supports IPv4 and is recommended
DATABASE_URL=postgresql://postgres.[PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[region].pooler.supabase.com:6543/postgres
# Note: URL-encode special characters in password (* = %2A, # = %23, @ = %40, etc.)

# =============================================================================
# Railway (Backend Hosting)
# =============================================================================
# Railway will inject these automatically in production
# For local development, you may not need these
RAILWAY_ENVIRONMENT=production

# =============================================================================
# Vercel (Frontend Hosting)
# =============================================================================
# Frontend needs to know where backend API is
# Local: http://localhost:8000
# Production: Your Railway URL
NEXT_PUBLIC_API_URL=http://localhost:8000

# =============================================================================
# Application Settings
# =============================================================================
# Environment: development, staging, production
ENVIRONMENT=development

# Port for local backend development
PORT=8000

# Enable debug mode (development only)
DEBUG=true

# API Key for protecting endpoints (required for /api/databases and text-to-sql endpoints)
# Generate a secure random key for production (use: openssl rand -hex 32)
API_KEY=your-api-key-here

# CORS origins (comma-separated)
# Local: http://localhost:3000
# Production: your-vercel-app.vercel.app
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# =============================================================================
# Spider Dataset (Optional - for tracking)
# =============================================================================
SPIDER_DATA_PATH=./data/spider

# =============================================================================
# Logging
# =============================================================================
LOG_LEVEL=INFO
